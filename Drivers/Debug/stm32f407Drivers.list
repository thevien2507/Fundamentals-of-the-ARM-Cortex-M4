
stm32f407Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000554  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006dc  080006e4  000106e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006dc  080006dc  000106e4  2**0
                  CONTENTS
  4 .ARM          00000000  080006dc  080006dc  000106e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006dc  080006e4  000106e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006dc  080006dc  000106dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006e0  080006e0  000106e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000106e4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000106e4  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010714  2**0
                  CONTENTS, READONLY
 14 .debug_info   000008a1  00000000  00000000  00010757  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000024c  00000000  00000000  00010ff8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000b8  00000000  00000000  00011248  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000007e  00000000  00000000  00011300  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000012e2  00000000  00000000  0001137e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000ce2  00000000  00000000  00012660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00004f37  00000000  00000000  00013342  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000224  00000000  00000000  0001827c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004f  00000000  00000000  000184a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080006c4 	.word	0x080006c4

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080006c4 	.word	0x080006c4

080001c8 <delay>:
#include "stm32f407xx.h"
#include "stm32f407_gpio.h"

void delay() {
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 250000; i++) {
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	; (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
	}
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ee:	4770      	bx	lr
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:

int main() {
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
	GPIO_handle_t gpioLED, gpioBtn;
	gpioLED.pGPIOx = GPIOD;
 80001fa:	4b1a      	ldr	r3, [pc, #104]	; (8000264 <main+0x70>)
 80001fc:	60fb      	str	r3, [r7, #12]
	gpioLED.pGPIO_Confg.GPIO_pinNumber = GPIO_PIN_NB_12;
 80001fe:	230c      	movs	r3, #12
 8000200:	743b      	strb	r3, [r7, #16]
	gpioLED.pGPIO_Confg.GPIO_pinMode = GPIO_MODE_OUTPUT;
 8000202:	2301      	movs	r3, #1
 8000204:	747b      	strb	r3, [r7, #17]
	gpioLED.pGPIO_Confg.GPIO_pinSpeed = GPIO_SPEED_FAST;
 8000206:	2302      	movs	r3, #2
 8000208:	74bb      	strb	r3, [r7, #18]
	gpioLED.pGPIO_Confg.GPIO_pinOPType = GPIO_MODE_OUTPUTTYPE_PUSHPULL;
 800020a:	2300      	movs	r3, #0
 800020c:	753b      	strb	r3, [r7, #20]
	gpioLED.pGPIO_Confg.GPIO_pinPuPdControl = GPIO_NO_PUPD;
 800020e:	2300      	movs	r3, #0
 8000210:	74fb      	strb	r3, [r7, #19]
	GPIO_ClockControl(GPIOD, ENABLE);
 8000212:	2101      	movs	r1, #1
 8000214:	4813      	ldr	r0, [pc, #76]	; (8000264 <main+0x70>)
 8000216:	f000 f853 	bl	80002c0 <GPIO_ClockControl>
	GPIO_Init(&gpioLED);
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f934 	bl	800048c <GPIO_Init>

	gpioLED.pGPIOx = GPIOA;
 8000224:	4b10      	ldr	r3, [pc, #64]	; (8000268 <main+0x74>)
 8000226:	60fb      	str	r3, [r7, #12]
	gpioBtn.pGPIO_Confg.GPIO_pinNumber = GPIO_PIN_NB_0;
 8000228:	2300      	movs	r3, #0
 800022a:	713b      	strb	r3, [r7, #4]
	gpioBtn.pGPIO_Confg.GPIO_pinMode = GPIO_MODE_INPUT;
 800022c:	2300      	movs	r3, #0
 800022e:	717b      	strb	r3, [r7, #5]
	gpioBtn.pGPIO_Confg.GPIO_pinSpeed = GPIO_SPEED_FAST;
 8000230:	2302      	movs	r3, #2
 8000232:	71bb      	strb	r3, [r7, #6]
	gpioBtn.pGPIO_Confg.GPIO_pinPuPdControl = GPIO_NO_PUPD;
 8000234:	2300      	movs	r3, #0
 8000236:	71fb      	strb	r3, [r7, #7]
	GPIO_ClockControl(GPIOA, ENABLE);
 8000238:	2101      	movs	r1, #1
 800023a:	480b      	ldr	r0, [pc, #44]	; (8000268 <main+0x74>)
 800023c:	f000 f840 	bl	80002c0 <GPIO_ClockControl>
	GPIO_Init(&gpioBtn);
 8000240:	463b      	mov	r3, r7
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f922 	bl	800048c <GPIO_Init>
	while (1) {
		if (GPIO_ReadInputPin(GPIOA, GPIO_PIN_NB_0)) {
 8000248:	2100      	movs	r1, #0
 800024a:	4807      	ldr	r0, [pc, #28]	; (8000268 <main+0x74>)
 800024c:	f000 f9eb 	bl	8000626 <GPIO_ReadInputPin>
 8000250:	4603      	mov	r3, r0
 8000252:	2b00      	cmp	r3, #0
 8000254:	d0f8      	beq.n	8000248 <main+0x54>
			delay();
 8000256:	f7ff ffb7 	bl	80001c8 <delay>
			GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NB_12);
 800025a:	210c      	movs	r1, #12
 800025c:	4801      	ldr	r0, [pc, #4]	; (8000264 <main+0x70>)
 800025e:	f000 f9f8 	bl	8000652 <GPIO_ToggleOutputPin>
		if (GPIO_ReadInputPin(GPIOA, GPIO_PIN_NB_0)) {
 8000262:	e7f1      	b.n	8000248 <main+0x54>
 8000264:	40020c00 	.word	0x40020c00
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	; (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	; (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	; (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	; (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	; (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	; (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 f9ef 	bl	800067c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffa9 	bl	80001f4 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	080006e4 	.word	0x080006e4
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_ClockControl>:
#include "stm32f407_gpio.h"
#include "stm32f407xx.h"

// Clock Setup
void GPIO_ClockControl(GPIO_REG *pGPIOxReg, uint8_t enOrDis) {
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if (enOrDis == ENABLE) {
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b01      	cmp	r3, #1
 80002d0:	d162      	bne.n	8000398 <GPIO_ClockControl+0xd8>
		if (pGPIOxReg == GPIOA) {
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a64      	ldr	r2, [pc, #400]	; (8000468 <GPIO_ClockControl+0x1a8>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_ClockControl+0x28>
			RCC_GPIOA_EN();
 80002da:	4b64      	ldr	r3, [pc, #400]	; (800046c <GPIO_ClockControl+0x1ac>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a63      	ldr	r2, [pc, #396]	; (800046c <GPIO_ClockControl+0x1ac>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
		} else if (pGPIOxReg == GPIOI) {
			RCC_GPIOI_DI();
		}
	}

}
 80002e6:	e0b9      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOB) {
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a61      	ldr	r2, [pc, #388]	; (8000470 <GPIO_ClockControl+0x1b0>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_ClockControl+0x3e>
			RCC_GPIOB_EN();
 80002f0:	4b5e      	ldr	r3, [pc, #376]	; (800046c <GPIO_ClockControl+0x1ac>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a5d      	ldr	r2, [pc, #372]	; (800046c <GPIO_ClockControl+0x1ac>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e0ae      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOC) {
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a5c      	ldr	r2, [pc, #368]	; (8000474 <GPIO_ClockControl+0x1b4>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_ClockControl+0x54>
			RCC_GPIOC_EN();
 8000306:	4b59      	ldr	r3, [pc, #356]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a58      	ldr	r2, [pc, #352]	; (800046c <GPIO_ClockControl+0x1ac>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e0a3      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOD) {
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a58      	ldr	r2, [pc, #352]	; (8000478 <GPIO_ClockControl+0x1b8>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_ClockControl+0x6a>
			RCC_GPIOD_EN();
 800031c:	4b53      	ldr	r3, [pc, #332]	; (800046c <GPIO_ClockControl+0x1ac>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a52      	ldr	r2, [pc, #328]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e098      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOE) {
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a52      	ldr	r2, [pc, #328]	; (8000478 <GPIO_ClockControl+0x1b8>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_ClockControl+0x80>
			RCC_GPIOE_EN();
 8000332:	4b4e      	ldr	r3, [pc, #312]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a4d      	ldr	r2, [pc, #308]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e08d      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOF) {
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a4e      	ldr	r2, [pc, #312]	; (800047c <GPIO_ClockControl+0x1bc>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_ClockControl+0x96>
			RCC_GPIOF_EN();
 8000348:	4b48      	ldr	r3, [pc, #288]	; (800046c <GPIO_ClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a47      	ldr	r2, [pc, #284]	; (800046c <GPIO_ClockControl+0x1ac>)
 800034e:	f043 0320 	orr.w	r3, r3, #32
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e082      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOG) {
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a49      	ldr	r2, [pc, #292]	; (8000480 <GPIO_ClockControl+0x1c0>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_ClockControl+0xac>
			RCC_GPIOG_EN();
 800035e:	4b43      	ldr	r3, [pc, #268]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a42      	ldr	r2, [pc, #264]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000364:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e077      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOH) {
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a45      	ldr	r2, [pc, #276]	; (8000484 <GPIO_ClockControl+0x1c4>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_ClockControl+0xc2>
			RCC_GPIOH_EN();
 8000374:	4b3d      	ldr	r3, [pc, #244]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a3c      	ldr	r2, [pc, #240]	; (800046c <GPIO_ClockControl+0x1ac>)
 800037a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e06c      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOI) {
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a40      	ldr	r2, [pc, #256]	; (8000488 <GPIO_ClockControl+0x1c8>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d168      	bne.n	800045c <GPIO_ClockControl+0x19c>
			RCC_GPIOI_EN();
 800038a:	4b38      	ldr	r3, [pc, #224]	; (800046c <GPIO_ClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a37      	ldr	r2, [pc, #220]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000390:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e061      	b.n	800045c <GPIO_ClockControl+0x19c>
		if (pGPIOxReg == GPIOA) {
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a33      	ldr	r2, [pc, #204]	; (8000468 <GPIO_ClockControl+0x1a8>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_ClockControl+0xee>
			RCC_GPIOA_DI();
 80003a0:	4b32      	ldr	r3, [pc, #200]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a31      	ldr	r2, [pc, #196]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003a6:	f023 0301 	bic.w	r3, r3, #1
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e056      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOB) {
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a2f      	ldr	r2, [pc, #188]	; (8000470 <GPIO_ClockControl+0x1b0>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_ClockControl+0x104>
			RCC_GPIOB_DI();
 80003b6:	4b2d      	ldr	r3, [pc, #180]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a2c      	ldr	r2, [pc, #176]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003bc:	f023 0302 	bic.w	r3, r3, #2
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e04b      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOC) {
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a2b      	ldr	r2, [pc, #172]	; (8000474 <GPIO_ClockControl+0x1b4>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_ClockControl+0x11a>
			RCC_GPIOC_DI();
 80003cc:	4b27      	ldr	r3, [pc, #156]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a26      	ldr	r2, [pc, #152]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003d2:	f023 0304 	bic.w	r3, r3, #4
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e040      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOD) {
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a26      	ldr	r2, [pc, #152]	; (8000478 <GPIO_ClockControl+0x1b8>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_ClockControl+0x130>
			RCC_GPIOD_DI();
 80003e2:	4b22      	ldr	r3, [pc, #136]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a21      	ldr	r2, [pc, #132]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003e8:	f023 0308 	bic.w	r3, r3, #8
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e035      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOE) {
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a21      	ldr	r2, [pc, #132]	; (8000478 <GPIO_ClockControl+0x1b8>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_ClockControl+0x146>
			RCC_GPIOE_DI();
 80003f8:	4b1c      	ldr	r3, [pc, #112]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a1b      	ldr	r2, [pc, #108]	; (800046c <GPIO_ClockControl+0x1ac>)
 80003fe:	f023 0310 	bic.w	r3, r3, #16
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	e02a      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOF) {
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a1c      	ldr	r2, [pc, #112]	; (800047c <GPIO_ClockControl+0x1bc>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_ClockControl+0x15c>
			RCC_GPIOF_DI();
 800040e:	4b17      	ldr	r3, [pc, #92]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000412:	4a16      	ldr	r2, [pc, #88]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000414:	f023 0320 	bic.w	r3, r3, #32
 8000418:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041a:	e01f      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOG) {
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a18      	ldr	r2, [pc, #96]	; (8000480 <GPIO_ClockControl+0x1c0>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_ClockControl+0x172>
			RCC_GPIOG_DI();
 8000424:	4b11      	ldr	r3, [pc, #68]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000428:	4a10      	ldr	r2, [pc, #64]	; (800046c <GPIO_ClockControl+0x1ac>)
 800042a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800042e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000430:	e014      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOH) {
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a13      	ldr	r2, [pc, #76]	; (8000484 <GPIO_ClockControl+0x1c4>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_ClockControl+0x188>
			RCC_GPIOH_DI();
 800043a:	4b0c      	ldr	r3, [pc, #48]	; (800046c <GPIO_ClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043e:	4a0b      	ldr	r2, [pc, #44]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000440:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000444:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000446:	e009      	b.n	800045c <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOI) {
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a0f      	ldr	r2, [pc, #60]	; (8000488 <GPIO_ClockControl+0x1c8>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d105      	bne.n	800045c <GPIO_ClockControl+0x19c>
			RCC_GPIOI_DI();
 8000450:	4b06      	ldr	r3, [pc, #24]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000454:	4a05      	ldr	r2, [pc, #20]	; (800046c <GPIO_ClockControl+0x1ac>)
 8000456:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800045a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045c:	bf00      	nop
 800045e:	370c      	adds	r7, #12
 8000460:	46bd      	mov	sp, r7
 8000462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000466:	4770      	bx	lr
 8000468:	40020000 	.word	0x40020000
 800046c:	40023800 	.word	0x40023800
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800
 8000478:	40020c00 	.word	0x40020c00
 800047c:	40021400 	.word	0x40021400
 8000480:	40021800 	.word	0x40021800
 8000484:	40021c00 	.word	0x40021c00
 8000488:	40022000 	.word	0x40022000

0800048c <GPIO_Init>:

// Initialization GPIO
void GPIO_Init(GPIO_handle_t *pGPIOHandle) {
 800048c:	b480      	push	{r7}
 800048e:	b085      	sub	sp, #20
 8000490:	af00      	add	r7, sp, #0
 8000492:	6078      	str	r0, [r7, #4]
	// 1. Config Mode
	// 32-bit Register Moder
	uint32_t temp = 0;
 8000494:	2300      	movs	r3, #0
 8000496:	60fb      	str	r3, [r7, #12]
	if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode <= GPIO_MODE_ANALOG) {
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	2b03      	cmp	r3, #3
 800049e:	d81e      	bhi.n	80004de <GPIO_Init+0x52>
		// Non-Interrupt Mode
		temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinMode
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	795b      	ldrb	r3, [r3, #5]
 80004a4:	461a      	mov	r2, r3
				<< (2 * pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	791b      	ldrb	r3, [r3, #4]
 80004aa:	005b      	lsls	r3, r3, #1
 80004ac:	fa02 f303 	lsl.w	r3, r2, r3
		temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinMode
 80004b0:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	681a      	ldr	r2, [r3, #0]
				<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	4619      	mov	r1, r3
 80004be:	2303      	movs	r3, #3
 80004c0:	408b      	lsls	r3, r1
		pGPIOHandle->pGPIOx->MODER &= ~(0x3
 80004c2:	43db      	mvns	r3, r3
 80004c4:	4619      	mov	r1, r3
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	400a      	ands	r2, r1
 80004cc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // Setting
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	6819      	ldr	r1, [r3, #0]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	68fa      	ldr	r2, [r7, #12]
 80004da:	430a      	orrs	r2, r1
 80004dc:	601a      	str	r2, [r3, #0]

	} else {
		// Interrupt Mode
	}
	// 2. Config Speed
	temp = 0;
 80004de:	2300      	movs	r3, #0
 80004e0:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinSpeed
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	799b      	ldrb	r3, [r3, #6]
 80004e6:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	791b      	ldrb	r3, [r3, #4]
 80004ec:	005b      	lsls	r3, r3, #1
 80004ee:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinSpeed
 80004f2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	689a      	ldr	r2, [r3, #8]
			<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	4619      	mov	r1, r3
 8000500:	2303      	movs	r3, #3
 8000502:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3
 8000504:	43db      	mvns	r3, r3
 8000506:	4619      	mov	r1, r3
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	400a      	ands	r2, r1
 800050e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	6899      	ldr	r1, [r3, #8]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	68fa      	ldr	r2, [r7, #12]
 800051c:	430a      	orrs	r2, r1
 800051e:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000520:	2300      	movs	r3, #0
 8000522:	60fb      	str	r3, [r7, #12]
	// 3. Pull-up, Pull-down
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinPuPdControl
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	79db      	ldrb	r3, [r3, #7]
 8000528:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	791b      	ldrb	r3, [r3, #4]
 800052e:	005b      	lsls	r3, r3, #1
 8000530:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinPuPdControl
 8000534:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	68da      	ldr	r2, [r3, #12]
			<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	4619      	mov	r1, r3
 8000542:	2303      	movs	r3, #3
 8000544:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3
 8000546:	43db      	mvns	r3, r3
 8000548:	4619      	mov	r1, r3
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	400a      	ands	r2, r1
 8000550:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	68d9      	ldr	r1, [r3, #12]
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	68fa      	ldr	r2, [r7, #12]
 800055e:	430a      	orrs	r2, r1
 8000560:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000562:	2300      	movs	r3, #0
 8000564:	60fb      	str	r3, [r7, #12]

	// 4. Config Output Type
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinOPType
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	7a1b      	ldrb	r3, [r3, #8]
 800056a:	461a      	mov	r2, r3
			<< (pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	791b      	ldrb	r3, [r3, #4]
 8000570:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinOPType
 8000574:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	685a      	ldr	r2, [r3, #4]
			<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	4619      	mov	r1, r3
 8000582:	2301      	movs	r3, #1
 8000584:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 8000586:	43db      	mvns	r3, r3
 8000588:	4619      	mov	r1, r3
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	400a      	ands	r2, r1
 8000590:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	6859      	ldr	r1, [r3, #4]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	68fa      	ldr	r2, [r7, #12]
 800059e:	430a      	orrs	r2, r1
 80005a0:	605a      	str	r2, [r3, #4]
	temp = 0;
 80005a2:	2300      	movs	r3, #0
 80005a4:	60fb      	str	r3, [r7, #12]

	// 5. Config Alt Functionality
	// Alt:
	// Low: pin 0 -> pin 7
	// High: pin 8 - > pin 15
	if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode == GPIO_MODE_ALT) {
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	795b      	ldrb	r3, [r3, #5]
 80005aa:	2b02      	cmp	r3, #2
 80005ac:	d135      	bne.n	800061a <GPIO_Init+0x18e>
		uint8_t temp1 = 0, temp2 = 0;
 80005ae:	2300      	movs	r3, #0
 80005b0:	72fb      	strb	r3, [r7, #11]
 80005b2:	2300      	movs	r3, #0
 80005b4:	72bb      	strb	r3, [r7, #10]
		temp1 = pGPIOHandle->pGPIO_Confg.GPIO_pinNumber / 8;
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	791b      	ldrb	r3, [r3, #4]
 80005ba:	08db      	lsrs	r3, r3, #3
 80005bc:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->pGPIO_Confg.GPIO_pinNumber % 8;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	f003 0307 	and.w	r3, r3, #7
 80005c6:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // Clearing first
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	7afa      	ldrb	r2, [r7, #11]
 80005ce:	3208      	adds	r2, #8
 80005d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005d4:	7abb      	ldrb	r3, [r7, #10]
 80005d6:	009b      	lsls	r3, r3, #2
 80005d8:	220f      	movs	r2, #15
 80005da:	fa02 f303 	lsl.w	r3, r2, r3
 80005de:	43db      	mvns	r3, r3
 80005e0:	4618      	mov	r0, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	7afa      	ldrb	r2, [r7, #11]
 80005e8:	4001      	ands	r1, r0
 80005ea:	3208      	adds	r2, #8
 80005ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	7afa      	ldrb	r2, [r7, #11]
 80005f6:	3208      	adds	r2, #8
 80005f8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
				pGPIOHandle->pGPIO_Confg.GPIO_pinAltFunMode << (4 * temp2);
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	7a5b      	ldrb	r3, [r3, #9]
 8000600:	461a      	mov	r2, r3
 8000602:	7abb      	ldrb	r3, [r7, #10]
 8000604:	009b      	lsls	r3, r3, #2
 8000606:	fa02 f303 	lsl.w	r3, r2, r3
 800060a:	4618      	mov	r0, r3
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	7afa      	ldrb	r2, [r7, #11]
 8000612:	4301      	orrs	r1, r0
 8000614:	3208      	adds	r2, #8
 8000616:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800061a:	bf00      	nop
 800061c:	3714      	adds	r7, #20
 800061e:	46bd      	mov	sp, r7
 8000620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000624:	4770      	bx	lr

08000626 <GPIO_ReadInputPin>:
		RCC_GPIOA_RESET();
	}
}

// Read input GPIO
uint8_t GPIO_ReadInputPin(GPIO_REG *pGPIOxReg, uint8_t pinNumber) {
 8000626:	b480      	push	{r7}
 8000628:	b085      	sub	sp, #20
 800062a:	af00      	add	r7, sp, #0
 800062c:	6078      	str	r0, [r7, #4]
 800062e:	460b      	mov	r3, r1
 8000630:	70fb      	strb	r3, [r7, #3]

	uint8_t inputVal = (uint8_t) ((pGPIOxReg->IDR) >> pinNumber) & 0x00000001;
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	691a      	ldr	r2, [r3, #16]
 8000636:	78fb      	ldrb	r3, [r7, #3]
 8000638:	fa22 f303 	lsr.w	r3, r2, r3
 800063c:	b2db      	uxtb	r3, r3
 800063e:	f003 0301 	and.w	r3, r3, #1
 8000642:	73fb      	strb	r3, [r7, #15]
	return inputVal;
 8000644:	7bfb      	ldrb	r3, [r7, #15]
}
 8000646:	4618      	mov	r0, r3
 8000648:	3714      	adds	r7, #20
 800064a:	46bd      	mov	sp, r7
 800064c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000650:	4770      	bx	lr

08000652 <GPIO_ToggleOutputPin>:
void GPIO_WriteOutputPort(GPIO_REG *pGPIOxReg, uint16_t value) {
	pGPIOxReg->ODR = value;
}

// Toggle Output Pin
void GPIO_ToggleOutputPin(GPIO_REG *pGPIOxReg, uint8_t pinNumber) {
 8000652:	b480      	push	{r7}
 8000654:	b083      	sub	sp, #12
 8000656:	af00      	add	r7, sp, #0
 8000658:	6078      	str	r0, [r7, #4]
 800065a:	460b      	mov	r3, r1
 800065c:	70fb      	strb	r3, [r7, #3]
	pGPIOxReg->ODR ^= (1 << pinNumber);
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	695b      	ldr	r3, [r3, #20]
 8000662:	78fa      	ldrb	r2, [r7, #3]
 8000664:	2101      	movs	r1, #1
 8000666:	fa01 f202 	lsl.w	r2, r1, r2
 800066a:	405a      	eors	r2, r3
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	615a      	str	r2, [r3, #20]
}
 8000670:	bf00      	nop
 8000672:	370c      	adds	r7, #12
 8000674:	46bd      	mov	sp, r7
 8000676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800067a:	4770      	bx	lr

0800067c <__libc_init_array>:
 800067c:	b570      	push	{r4, r5, r6, lr}
 800067e:	4d0d      	ldr	r5, [pc, #52]	; (80006b4 <__libc_init_array+0x38>)
 8000680:	4c0d      	ldr	r4, [pc, #52]	; (80006b8 <__libc_init_array+0x3c>)
 8000682:	1b64      	subs	r4, r4, r5
 8000684:	10a4      	asrs	r4, r4, #2
 8000686:	2600      	movs	r6, #0
 8000688:	42a6      	cmp	r6, r4
 800068a:	d109      	bne.n	80006a0 <__libc_init_array+0x24>
 800068c:	4d0b      	ldr	r5, [pc, #44]	; (80006bc <__libc_init_array+0x40>)
 800068e:	4c0c      	ldr	r4, [pc, #48]	; (80006c0 <__libc_init_array+0x44>)
 8000690:	f000 f818 	bl	80006c4 <_init>
 8000694:	1b64      	subs	r4, r4, r5
 8000696:	10a4      	asrs	r4, r4, #2
 8000698:	2600      	movs	r6, #0
 800069a:	42a6      	cmp	r6, r4
 800069c:	d105      	bne.n	80006aa <__libc_init_array+0x2e>
 800069e:	bd70      	pop	{r4, r5, r6, pc}
 80006a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a4:	4798      	blx	r3
 80006a6:	3601      	adds	r6, #1
 80006a8:	e7ee      	b.n	8000688 <__libc_init_array+0xc>
 80006aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ae:	4798      	blx	r3
 80006b0:	3601      	adds	r6, #1
 80006b2:	e7f2      	b.n	800069a <__libc_init_array+0x1e>
 80006b4:	080006dc 	.word	0x080006dc
 80006b8:	080006dc 	.word	0x080006dc
 80006bc:	080006dc 	.word	0x080006dc
 80006c0:	080006e0 	.word	0x080006e0

080006c4 <_init>:
 80006c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006c6:	bf00      	nop
 80006c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ca:	bc08      	pop	{r3}
 80006cc:	469e      	mov	lr, r3
 80006ce:	4770      	bx	lr

080006d0 <_fini>:
 80006d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006d2:	bf00      	nop
 80006d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006d6:	bc08      	pop	{r3}
 80006d8:	469e      	mov	lr, r3
 80006da:	4770      	bx	lr
