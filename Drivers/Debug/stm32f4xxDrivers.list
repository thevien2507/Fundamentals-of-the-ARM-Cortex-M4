
stm32f4xxDrivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000880  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a08  08000a10  00010a10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a08  08000a08  00010a10  2**0
                  CONTENTS
  4 .ARM          00000000  08000a08  08000a08  00010a10  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a08  08000a10  00010a10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a08  08000a08  00010a08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a0c  08000a0c  00010a0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010a10  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010a10  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010a40  2**0
                  CONTENTS, READONLY
 14 .debug_info   000009eb  00000000  00000000  00010a83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000025c  00000000  00000000  0001146e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c8  00000000  00000000  000116d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000008b  00000000  00000000  00011798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001363  00000000  00000000  00011823  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000f11  00000000  00000000  00012b86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000052d4  00000000  00000000  00013a97  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000268  00000000  00000000  00018d6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004e  00000000  00000000  00018fd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080009f0 	.word	0x080009f0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080009f0 	.word	0x080009f0

080001c8 <delay>:
#include "stm32f407xx.h"
#include "stm32f407_gpio.h"

void delay() {
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 250000; i++) {
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	; (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
	}
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ee:	4770      	bx	lr
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:

int main() {
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
	GPIO_handle_t gpioLED, gpioBtn;
	gpioLED.pGPIOx = GPIOD;
 80001fa:	4b18      	ldr	r3, [pc, #96]	; (800025c <main+0x68>)
 80001fc:	60fb      	str	r3, [r7, #12]
	gpioLED.pGPIO_Confg.GPIO_pinNumber = GPIO_PIN_NB_12;
 80001fe:	230c      	movs	r3, #12
 8000200:	743b      	strb	r3, [r7, #16]
	gpioLED.pGPIO_Confg.GPIO_pinMode = GPIO_MODE_OUTPUT;
 8000202:	2301      	movs	r3, #1
 8000204:	747b      	strb	r3, [r7, #17]
	gpioLED.pGPIO_Confg.GPIO_pinSpeed = GPIO_SPEED_FAST;
 8000206:	2302      	movs	r3, #2
 8000208:	74bb      	strb	r3, [r7, #18]
	gpioLED.pGPIO_Confg.GPIO_pinOPType = GPIO_MODE_OUTPUTTYPE_PUSHPULL;
 800020a:	2300      	movs	r3, #0
 800020c:	753b      	strb	r3, [r7, #20]
	gpioLED.pGPIO_Confg.GPIO_pinPuPdControl = GPIO_NO_PUPD;
 800020e:	2300      	movs	r3, #0
 8000210:	74fb      	strb	r3, [r7, #19]
	GPIO_ClockControl(GPIOD, ENABLE);
 8000212:	2101      	movs	r1, #1
 8000214:	4811      	ldr	r0, [pc, #68]	; (800025c <main+0x68>)
 8000216:	f000 f85f 	bl	80002d8 <GPIO_ClockControl>
	GPIO_Init(&gpioLED);
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f940 	bl	80004a4 <GPIO_Init>

	gpioBtn.pGPIOx = GPIOA;
 8000224:	4b0e      	ldr	r3, [pc, #56]	; (8000260 <main+0x6c>)
 8000226:	603b      	str	r3, [r7, #0]
	gpioBtn.pGPIO_Confg.GPIO_pinNumber = GPIO_PIN_NB_0;
 8000228:	2300      	movs	r3, #0
 800022a:	713b      	strb	r3, [r7, #4]
	gpioBtn.pGPIO_Confg.GPIO_pinMode = GPIO_MODE_RISING;
 800022c:	2305      	movs	r3, #5
 800022e:	717b      	strb	r3, [r7, #5]
	gpioBtn.pGPIO_Confg.GPIO_pinSpeed = GPIO_SPEED_FAST;
 8000230:	2302      	movs	r3, #2
 8000232:	71bb      	strb	r3, [r7, #6]
	gpioBtn.pGPIO_Confg.GPIO_pinPuPdControl = GPIO_NO_PUPD;
 8000234:	2300      	movs	r3, #0
 8000236:	71fb      	strb	r3, [r7, #7]
	GPIO_ClockControl(GPIOA, ENABLE);
 8000238:	2101      	movs	r1, #1
 800023a:	4809      	ldr	r0, [pc, #36]	; (8000260 <main+0x6c>)
 800023c:	f000 f84c 	bl	80002d8 <GPIO_ClockControl>
	GPIO_Init(&gpioBtn);
 8000240:	463b      	mov	r3, r7
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f92e 	bl	80004a4 <GPIO_Init>

	GPIO_IRQPriorty(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 8000248:	210f      	movs	r1, #15
 800024a:	2006      	movs	r0, #6
 800024c:	f000 fb5e 	bl	800090c <GPIO_IRQPriorty>
	GPIO_IRQConfig(IRQ_NO_EXTI0, ENABLE);
 8000250:	2101      	movs	r1, #1
 8000252:	2006      	movs	r0, #6
 8000254:	f000 fad4 	bl	8000800 <GPIO_IRQConfig>
	while (1) {
 8000258:	e7fe      	b.n	8000258 <main+0x64>
 800025a:	bf00      	nop
 800025c:	40020c00 	.word	0x40020c00
 8000260:	40020000 	.word	0x40020000

08000264 <EXTI0_IRQHandler>:
	}
}

void EXTI0_IRQHandler(void) {
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	delay();
 8000268:	f7ff ffae 	bl	80001c8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NB_0);
 800026c:	2000      	movs	r0, #0
 800026e:	f000 fb7b 	bl	8000968 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NB_12);
 8000272:	210c      	movs	r1, #12
 8000274:	4802      	ldr	r0, [pc, #8]	; (8000280 <EXTI0_IRQHandler+0x1c>)
 8000276:	f000 faad 	bl	80007d4 <GPIO_ToggleOutputPin>
}
 800027a:	bf00      	nop
 800027c:	bd80      	pop	{r7, pc}
 800027e:	bf00      	nop
 8000280:	40020c00 	.word	0x40020c00

08000284 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000284:	480d      	ldr	r0, [pc, #52]	; (80002bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000286:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000288:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800028c:	480c      	ldr	r0, [pc, #48]	; (80002c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800028e:	490d      	ldr	r1, [pc, #52]	; (80002c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000290:	4a0d      	ldr	r2, [pc, #52]	; (80002c8 <LoopForever+0xe>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000294:	e002      	b.n	800029c <LoopCopyDataInit>

08000296 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000296:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000298:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800029a:	3304      	adds	r3, #4

0800029c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800029c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800029e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a0:	d3f9      	bcc.n	8000296 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002a2:	4a0a      	ldr	r2, [pc, #40]	; (80002cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80002a4:	4c0a      	ldr	r4, [pc, #40]	; (80002d0 <LoopForever+0x16>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a8:	e001      	b.n	80002ae <LoopFillZerobss>

080002aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ac:	3204      	adds	r2, #4

080002ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b0:	d3fb      	bcc.n	80002aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002b2:	f000 fb79 	bl	80009a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002b6:	f7ff ff9d 	bl	80001f4 <main>

080002ba <LoopForever>:

LoopForever:
  b LoopForever
 80002ba:	e7fe      	b.n	80002ba <LoopForever>
  ldr   r0, =_estack
 80002bc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002c4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c8:	08000a10 	.word	0x08000a10
  ldr r2, =_sbss
 80002cc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d0:	2000001c 	.word	0x2000001c

080002d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002d4:	e7fe      	b.n	80002d4 <ADC_IRQHandler>
	...

080002d8 <GPIO_ClockControl>:
#include "stm32f407_gpio.h"
#include "stm32f407xx.h"

// Clock Setup
void GPIO_ClockControl(GPIO_REG *pGPIOxReg, uint8_t enOrDis) {
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
 80002e0:	460b      	mov	r3, r1
 80002e2:	70fb      	strb	r3, [r7, #3]
	if (enOrDis == ENABLE) {
 80002e4:	78fb      	ldrb	r3, [r7, #3]
 80002e6:	2b01      	cmp	r3, #1
 80002e8:	d162      	bne.n	80003b0 <GPIO_ClockControl+0xd8>
		if (pGPIOxReg == GPIOA) {
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a64      	ldr	r2, [pc, #400]	; (8000480 <GPIO_ClockControl+0x1a8>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d106      	bne.n	8000300 <GPIO_ClockControl+0x28>
			RCC_GPIOA_EN();
 80002f2:	4b64      	ldr	r3, [pc, #400]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80002f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f6:	4a63      	ldr	r2, [pc, #396]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80002f8:	f043 0301 	orr.w	r3, r3, #1
 80002fc:	6313      	str	r3, [r2, #48]	; 0x30
		} else if (pGPIOxReg == GPIOI) {
			RCC_GPIOI_DI();
		}
	}

}
 80002fe:	e0b9      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOB) {
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4a61      	ldr	r2, [pc, #388]	; (8000488 <GPIO_ClockControl+0x1b0>)
 8000304:	4293      	cmp	r3, r2
 8000306:	d106      	bne.n	8000316 <GPIO_ClockControl+0x3e>
			RCC_GPIOB_EN();
 8000308:	4b5e      	ldr	r3, [pc, #376]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800030a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030c:	4a5d      	ldr	r2, [pc, #372]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800030e:	f043 0302 	orr.w	r3, r3, #2
 8000312:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000314:	e0ae      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOC) {
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a5c      	ldr	r2, [pc, #368]	; (800048c <GPIO_ClockControl+0x1b4>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_ClockControl+0x54>
			RCC_GPIOC_EN();
 800031e:	4b59      	ldr	r3, [pc, #356]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000322:	4a58      	ldr	r2, [pc, #352]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000324:	f043 0304 	orr.w	r3, r3, #4
 8000328:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032a:	e0a3      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOD) {
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a58      	ldr	r2, [pc, #352]	; (8000490 <GPIO_ClockControl+0x1b8>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_ClockControl+0x6a>
			RCC_GPIOD_EN();
 8000334:	4b53      	ldr	r3, [pc, #332]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000338:	4a52      	ldr	r2, [pc, #328]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800033a:	f043 0308 	orr.w	r3, r3, #8
 800033e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000340:	e098      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOE) {
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a52      	ldr	r2, [pc, #328]	; (8000490 <GPIO_ClockControl+0x1b8>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_ClockControl+0x80>
			RCC_GPIOE_EN();
 800034a:	4b4e      	ldr	r3, [pc, #312]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800034c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034e:	4a4d      	ldr	r2, [pc, #308]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000350:	f043 0310 	orr.w	r3, r3, #16
 8000354:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000356:	e08d      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOF) {
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a4e      	ldr	r2, [pc, #312]	; (8000494 <GPIO_ClockControl+0x1bc>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d106      	bne.n	800036e <GPIO_ClockControl+0x96>
			RCC_GPIOF_EN();
 8000360:	4b48      	ldr	r3, [pc, #288]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000364:	4a47      	ldr	r2, [pc, #284]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000366:	f043 0320 	orr.w	r3, r3, #32
 800036a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036c:	e082      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOG) {
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4a49      	ldr	r2, [pc, #292]	; (8000498 <GPIO_ClockControl+0x1c0>)
 8000372:	4293      	cmp	r3, r2
 8000374:	d106      	bne.n	8000384 <GPIO_ClockControl+0xac>
			RCC_GPIOG_EN();
 8000376:	4b43      	ldr	r3, [pc, #268]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037a:	4a42      	ldr	r2, [pc, #264]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800037c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000380:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000382:	e077      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOH) {
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	4a45      	ldr	r2, [pc, #276]	; (800049c <GPIO_ClockControl+0x1c4>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d106      	bne.n	800039a <GPIO_ClockControl+0xc2>
			RCC_GPIOH_EN();
 800038c:	4b3d      	ldr	r3, [pc, #244]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800038e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000390:	4a3c      	ldr	r2, [pc, #240]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000392:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000396:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000398:	e06c      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOI) {
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4a40      	ldr	r2, [pc, #256]	; (80004a0 <GPIO_ClockControl+0x1c8>)
 800039e:	4293      	cmp	r3, r2
 80003a0:	d168      	bne.n	8000474 <GPIO_ClockControl+0x19c>
			RCC_GPIOI_EN();
 80003a2:	4b38      	ldr	r3, [pc, #224]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a6:	4a37      	ldr	r2, [pc, #220]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ae:	e061      	b.n	8000474 <GPIO_ClockControl+0x19c>
		if (pGPIOxReg == GPIOA) {
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	4a33      	ldr	r2, [pc, #204]	; (8000480 <GPIO_ClockControl+0x1a8>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d106      	bne.n	80003c6 <GPIO_ClockControl+0xee>
			RCC_GPIOA_DI();
 80003b8:	4b32      	ldr	r3, [pc, #200]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003bc:	4a31      	ldr	r2, [pc, #196]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003be:	f023 0301 	bic.w	r3, r3, #1
 80003c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c4:	e056      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOB) {
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4a2f      	ldr	r2, [pc, #188]	; (8000488 <GPIO_ClockControl+0x1b0>)
 80003ca:	4293      	cmp	r3, r2
 80003cc:	d106      	bne.n	80003dc <GPIO_ClockControl+0x104>
			RCC_GPIOB_DI();
 80003ce:	4b2d      	ldr	r3, [pc, #180]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d2:	4a2c      	ldr	r2, [pc, #176]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003d4:	f023 0302 	bic.w	r3, r3, #2
 80003d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003da:	e04b      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOC) {
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a2b      	ldr	r2, [pc, #172]	; (800048c <GPIO_ClockControl+0x1b4>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d106      	bne.n	80003f2 <GPIO_ClockControl+0x11a>
			RCC_GPIOC_DI();
 80003e4:	4b27      	ldr	r3, [pc, #156]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e8:	4a26      	ldr	r2, [pc, #152]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003ea:	f023 0304 	bic.w	r3, r3, #4
 80003ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f0:	e040      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOD) {
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4a26      	ldr	r2, [pc, #152]	; (8000490 <GPIO_ClockControl+0x1b8>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d106      	bne.n	8000408 <GPIO_ClockControl+0x130>
			RCC_GPIOD_DI();
 80003fa:	4b22      	ldr	r3, [pc, #136]	; (8000484 <GPIO_ClockControl+0x1ac>)
 80003fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fe:	4a21      	ldr	r2, [pc, #132]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000400:	f023 0308 	bic.w	r3, r3, #8
 8000404:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000406:	e035      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOE) {
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	4a21      	ldr	r2, [pc, #132]	; (8000490 <GPIO_ClockControl+0x1b8>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d106      	bne.n	800041e <GPIO_ClockControl+0x146>
			RCC_GPIOE_DI();
 8000410:	4b1c      	ldr	r3, [pc, #112]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000414:	4a1b      	ldr	r2, [pc, #108]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000416:	f023 0310 	bic.w	r3, r3, #16
 800041a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041c:	e02a      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOF) {
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4a1c      	ldr	r2, [pc, #112]	; (8000494 <GPIO_ClockControl+0x1bc>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d106      	bne.n	8000434 <GPIO_ClockControl+0x15c>
			RCC_GPIOF_DI();
 8000426:	4b17      	ldr	r3, [pc, #92]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000428:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042a:	4a16      	ldr	r2, [pc, #88]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800042c:	f023 0320 	bic.w	r3, r3, #32
 8000430:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000432:	e01f      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOG) {
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a18      	ldr	r2, [pc, #96]	; (8000498 <GPIO_ClockControl+0x1c0>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d106      	bne.n	800044a <GPIO_ClockControl+0x172>
			RCC_GPIOG_DI();
 800043c:	4b11      	ldr	r3, [pc, #68]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800043e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000440:	4a10      	ldr	r2, [pc, #64]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000442:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000446:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000448:	e014      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOH) {
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	4a13      	ldr	r2, [pc, #76]	; (800049c <GPIO_ClockControl+0x1c4>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d106      	bne.n	8000460 <GPIO_ClockControl+0x188>
			RCC_GPIOH_DI();
 8000452:	4b0c      	ldr	r3, [pc, #48]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000456:	4a0b      	ldr	r2, [pc, #44]	; (8000484 <GPIO_ClockControl+0x1ac>)
 8000458:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800045c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045e:	e009      	b.n	8000474 <GPIO_ClockControl+0x19c>
		} else if (pGPIOxReg == GPIOI) {
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	4a0f      	ldr	r2, [pc, #60]	; (80004a0 <GPIO_ClockControl+0x1c8>)
 8000464:	4293      	cmp	r3, r2
 8000466:	d105      	bne.n	8000474 <GPIO_ClockControl+0x19c>
			RCC_GPIOI_DI();
 8000468:	4b06      	ldr	r3, [pc, #24]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800046a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046c:	4a05      	ldr	r2, [pc, #20]	; (8000484 <GPIO_ClockControl+0x1ac>)
 800046e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000472:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000474:	bf00      	nop
 8000476:	370c      	adds	r7, #12
 8000478:	46bd      	mov	sp, r7
 800047a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047e:	4770      	bx	lr
 8000480:	40020000 	.word	0x40020000
 8000484:	40023800 	.word	0x40023800
 8000488:	40020400 	.word	0x40020400
 800048c:	40020800 	.word	0x40020800
 8000490:	40020c00 	.word	0x40020c00
 8000494:	40021400 	.word	0x40021400
 8000498:	40021800 	.word	0x40021800
 800049c:	40021c00 	.word	0x40021c00
 80004a0:	40022000 	.word	0x40022000

080004a4 <GPIO_Init>:

// Initialization GPIO
void GPIO_Init(GPIO_handle_t *pGPIOHandle) {
 80004a4:	b480      	push	{r7}
 80004a6:	b087      	sub	sp, #28
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	6078      	str	r0, [r7, #4]
	// 1. Config Mode
	// 32-bit Register Moder
	uint32_t temp = 0;
 80004ac:	2300      	movs	r3, #0
 80004ae:	617b      	str	r3, [r7, #20]
	if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode <= GPIO_MODE_ANALOG) {
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	795b      	ldrb	r3, [r3, #5]
 80004b4:	2b03      	cmp	r3, #3
 80004b6:	d81f      	bhi.n	80004f8 <GPIO_Init+0x54>
		// Non-Interrupt Mode
		temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinMode
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	795b      	ldrb	r3, [r3, #5]
 80004bc:	461a      	mov	r2, r3
				<< (2 * pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	791b      	ldrb	r3, [r3, #4]
 80004c2:	005b      	lsls	r3, r3, #1
 80004c4:	fa02 f303 	lsl.w	r3, r2, r3
		temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinMode
 80004c8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	681a      	ldr	r2, [r3, #0]
				<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	791b      	ldrb	r3, [r3, #4]
 80004d4:	4619      	mov	r1, r3
 80004d6:	2303      	movs	r3, #3
 80004d8:	408b      	lsls	r3, r1
		pGPIOHandle->pGPIOx->MODER &= ~(0x3
 80004da:	43db      	mvns	r3, r3
 80004dc:	4619      	mov	r1, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	400a      	ands	r2, r1
 80004e4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // Setting
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	6819      	ldr	r1, [r3, #0]
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	697a      	ldr	r2, [r7, #20]
 80004f2:	430a      	orrs	r2, r1
 80004f4:	601a      	str	r2, [r3, #0]
 80004f6:	e0c4      	b.n	8000682 <GPIO_Init+0x1de>

	} else {
		// Interrupt Mode
		if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode == GPIO_MODE_FALLING) {
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	795b      	ldrb	r3, [r3, #5]
 80004fc:	2b04      	cmp	r3, #4
 80004fe:	d117      	bne.n	8000530 <GPIO_Init+0x8c>
			EXTI->FTSR |= (1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 8000500:	4b4a      	ldr	r3, [pc, #296]	; (800062c <GPIO_Init+0x188>)
 8000502:	68db      	ldr	r3, [r3, #12]
 8000504:	687a      	ldr	r2, [r7, #4]
 8000506:	7912      	ldrb	r2, [r2, #4]
 8000508:	4611      	mov	r1, r2
 800050a:	2201      	movs	r2, #1
 800050c:	408a      	lsls	r2, r1
 800050e:	4611      	mov	r1, r2
 8000510:	4a46      	ldr	r2, [pc, #280]	; (800062c <GPIO_Init+0x188>)
 8000512:	430b      	orrs	r3, r1
 8000514:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 8000516:	4b45      	ldr	r3, [pc, #276]	; (800062c <GPIO_Init+0x188>)
 8000518:	689b      	ldr	r3, [r3, #8]
 800051a:	687a      	ldr	r2, [r7, #4]
 800051c:	7912      	ldrb	r2, [r2, #4]
 800051e:	4611      	mov	r1, r2
 8000520:	2201      	movs	r2, #1
 8000522:	408a      	lsls	r2, r1
 8000524:	43d2      	mvns	r2, r2
 8000526:	4611      	mov	r1, r2
 8000528:	4a40      	ldr	r2, [pc, #256]	; (800062c <GPIO_Init+0x188>)
 800052a:	400b      	ands	r3, r1
 800052c:	6093      	str	r3, [r2, #8]
 800052e:	e035      	b.n	800059c <GPIO_Init+0xf8>
		} else if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode == GPIO_MODE_RISING) {
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	795b      	ldrb	r3, [r3, #5]
 8000534:	2b05      	cmp	r3, #5
 8000536:	d117      	bne.n	8000568 <GPIO_Init+0xc4>
			EXTI->RTSR |= (1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 8000538:	4b3c      	ldr	r3, [pc, #240]	; (800062c <GPIO_Init+0x188>)
 800053a:	689b      	ldr	r3, [r3, #8]
 800053c:	687a      	ldr	r2, [r7, #4]
 800053e:	7912      	ldrb	r2, [r2, #4]
 8000540:	4611      	mov	r1, r2
 8000542:	2201      	movs	r2, #1
 8000544:	408a      	lsls	r2, r1
 8000546:	4611      	mov	r1, r2
 8000548:	4a38      	ldr	r2, [pc, #224]	; (800062c <GPIO_Init+0x188>)
 800054a:	430b      	orrs	r3, r1
 800054c:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 800054e:	4b37      	ldr	r3, [pc, #220]	; (800062c <GPIO_Init+0x188>)
 8000550:	68db      	ldr	r3, [r3, #12]
 8000552:	687a      	ldr	r2, [r7, #4]
 8000554:	7912      	ldrb	r2, [r2, #4]
 8000556:	4611      	mov	r1, r2
 8000558:	2201      	movs	r2, #1
 800055a:	408a      	lsls	r2, r1
 800055c:	43d2      	mvns	r2, r2
 800055e:	4611      	mov	r1, r2
 8000560:	4a32      	ldr	r2, [pc, #200]	; (800062c <GPIO_Init+0x188>)
 8000562:	400b      	ands	r3, r1
 8000564:	60d3      	str	r3, [r2, #12]
 8000566:	e019      	b.n	800059c <GPIO_Init+0xf8>
		} else if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	795b      	ldrb	r3, [r3, #5]
 800056c:	2b06      	cmp	r3, #6
 800056e:	d115      	bne.n	800059c <GPIO_Init+0xf8>
				== GPIO_MODE_RISING_FALLING) {
			EXTI->RTSR |= (1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 8000570:	4b2e      	ldr	r3, [pc, #184]	; (800062c <GPIO_Init+0x188>)
 8000572:	689b      	ldr	r3, [r3, #8]
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	7912      	ldrb	r2, [r2, #4]
 8000578:	4611      	mov	r1, r2
 800057a:	2201      	movs	r2, #1
 800057c:	408a      	lsls	r2, r1
 800057e:	4611      	mov	r1, r2
 8000580:	4a2a      	ldr	r2, [pc, #168]	; (800062c <GPIO_Init+0x188>)
 8000582:	430b      	orrs	r3, r1
 8000584:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 8000586:	4b29      	ldr	r3, [pc, #164]	; (800062c <GPIO_Init+0x188>)
 8000588:	68db      	ldr	r3, [r3, #12]
 800058a:	687a      	ldr	r2, [r7, #4]
 800058c:	7912      	ldrb	r2, [r2, #4]
 800058e:	4611      	mov	r1, r2
 8000590:	2201      	movs	r2, #1
 8000592:	408a      	lsls	r2, r1
 8000594:	4611      	mov	r1, r2
 8000596:	4a25      	ldr	r2, [pc, #148]	; (800062c <GPIO_Init+0x188>)
 8000598:	430b      	orrs	r3, r1
 800059a:	60d3      	str	r3, [r2, #12]
		}
		// 2. Find out the PORT for the EXTIx
		RCC_SYSCFG_EN();
 800059c:	4b24      	ldr	r3, [pc, #144]	; (8000630 <GPIO_Init+0x18c>)
 800059e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005a0:	4a23      	ldr	r2, [pc, #140]	; (8000630 <GPIO_Init+0x18c>)
 80005a2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005a6:	6453      	str	r3, [r2, #68]	; 0x44
		uint8_t extiX = pGPIOHandle->pGPIO_Confg.GPIO_pinNumber / 4;
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	089b      	lsrs	r3, r3, #2
 80005ae:	74fb      	strb	r3, [r7, #19]
		uint8_t posRegEXTIx = pGPIOHandle->pGPIO_Confg.GPIO_pinNumber % 4;
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	791b      	ldrb	r3, [r3, #4]
 80005b4:	f003 0303 	and.w	r3, r3, #3
 80005b8:	74bb      	strb	r3, [r7, #18]
		uint8_t portX = portXFunc(pGPIOHandle->pGPIOx);
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a1d      	ldr	r2, [pc, #116]	; (8000634 <GPIO_Init+0x190>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d047      	beq.n	8000654 <GPIO_Init+0x1b0>
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a1b      	ldr	r2, [pc, #108]	; (8000638 <GPIO_Init+0x194>)
 80005ca:	4293      	cmp	r3, r2
 80005cc:	d02b      	beq.n	8000626 <GPIO_Init+0x182>
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a1a      	ldr	r2, [pc, #104]	; (800063c <GPIO_Init+0x198>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d024      	beq.n	8000622 <GPIO_Init+0x17e>
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a18      	ldr	r2, [pc, #96]	; (8000640 <GPIO_Init+0x19c>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d01d      	beq.n	800061e <GPIO_Init+0x17a>
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	4a17      	ldr	r2, [pc, #92]	; (8000644 <GPIO_Init+0x1a0>)
 80005e8:	4293      	cmp	r3, r2
 80005ea:	d016      	beq.n	800061a <GPIO_Init+0x176>
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a15      	ldr	r2, [pc, #84]	; (8000648 <GPIO_Init+0x1a4>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d00f      	beq.n	8000616 <GPIO_Init+0x172>
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	4a14      	ldr	r2, [pc, #80]	; (800064c <GPIO_Init+0x1a8>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d008      	beq.n	8000612 <GPIO_Init+0x16e>
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	4a12      	ldr	r2, [pc, #72]	; (8000650 <GPIO_Init+0x1ac>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d101      	bne.n	800060e <GPIO_Init+0x16a>
 800060a:	2308      	movs	r3, #8
 800060c:	e023      	b.n	8000656 <GPIO_Init+0x1b2>
 800060e:	2300      	movs	r3, #0
 8000610:	e021      	b.n	8000656 <GPIO_Init+0x1b2>
 8000612:	2307      	movs	r3, #7
 8000614:	e01f      	b.n	8000656 <GPIO_Init+0x1b2>
 8000616:	2306      	movs	r3, #6
 8000618:	e01d      	b.n	8000656 <GPIO_Init+0x1b2>
 800061a:	2305      	movs	r3, #5
 800061c:	e01b      	b.n	8000656 <GPIO_Init+0x1b2>
 800061e:	2303      	movs	r3, #3
 8000620:	e019      	b.n	8000656 <GPIO_Init+0x1b2>
 8000622:	2302      	movs	r3, #2
 8000624:	e017      	b.n	8000656 <GPIO_Init+0x1b2>
 8000626:	2301      	movs	r3, #1
 8000628:	e015      	b.n	8000656 <GPIO_Init+0x1b2>
 800062a:	bf00      	nop
 800062c:	40013c00 	.word	0x40013c00
 8000630:	40023800 	.word	0x40023800
 8000634:	40020000 	.word	0x40020000
 8000638:	40020400 	.word	0x40020400
 800063c:	40020800 	.word	0x40020800
 8000640:	40020c00 	.word	0x40020c00
 8000644:	40021400 	.word	0x40021400
 8000648:	40021800 	.word	0x40021800
 800064c:	40021c00 	.word	0x40021c00
 8000650:	40022000 	.word	0x40022000
 8000654:	2300      	movs	r3, #0
 8000656:	747b      	strb	r3, [r7, #17]
		SYSCONFG->EXTICR[extiX] = portX << (posRegEXTIx * 4);
 8000658:	7c7a      	ldrb	r2, [r7, #17]
 800065a:	7cbb      	ldrb	r3, [r7, #18]
 800065c:	009b      	lsls	r3, r3, #2
 800065e:	fa02 f103 	lsl.w	r1, r2, r3
 8000662:	4a5a      	ldr	r2, [pc, #360]	; (80007cc <GPIO_Init+0x328>)
 8000664:	7cfb      	ldrb	r3, [r7, #19]
 8000666:	3302      	adds	r3, #2
 8000668:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		// 3. ENABLE THE INTERRUPT OF GPIO PERIPHERAL
		EXTI->IMR |= (1 << pGPIOHandle->pGPIO_Confg.GPIO_pinNumber);
 800066c:	4b58      	ldr	r3, [pc, #352]	; (80007d0 <GPIO_Init+0x32c>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	687a      	ldr	r2, [r7, #4]
 8000672:	7912      	ldrb	r2, [r2, #4]
 8000674:	4611      	mov	r1, r2
 8000676:	2201      	movs	r2, #1
 8000678:	408a      	lsls	r2, r1
 800067a:	4611      	mov	r1, r2
 800067c:	4a54      	ldr	r2, [pc, #336]	; (80007d0 <GPIO_Init+0x32c>)
 800067e:	430b      	orrs	r3, r1
 8000680:	6013      	str	r3, [r2, #0]
	}
	// 2. Config Speed
	temp = 0;
 8000682:	2300      	movs	r3, #0
 8000684:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinSpeed
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	799b      	ldrb	r3, [r3, #6]
 800068a:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	791b      	ldrb	r3, [r3, #4]
 8000690:	005b      	lsls	r3, r3, #1
 8000692:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinSpeed
 8000696:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	689a      	ldr	r2, [r3, #8]
			<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	791b      	ldrb	r3, [r3, #4]
 80006a2:	4619      	mov	r1, r3
 80006a4:	2303      	movs	r3, #3
 80006a6:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3
 80006a8:	43db      	mvns	r3, r3
 80006aa:	4619      	mov	r1, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	400a      	ands	r2, r1
 80006b2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	6899      	ldr	r1, [r3, #8]
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	697a      	ldr	r2, [r7, #20]
 80006c0:	430a      	orrs	r2, r1
 80006c2:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006c4:	2300      	movs	r3, #0
 80006c6:	617b      	str	r3, [r7, #20]
	// 3. Pull-up, Pull-down
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinPuPdControl
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	79db      	ldrb	r3, [r3, #7]
 80006cc:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	791b      	ldrb	r3, [r3, #4]
 80006d2:	005b      	lsls	r3, r3, #1
 80006d4:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinPuPdControl
 80006d8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	68da      	ldr	r2, [r3, #12]
			<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	791b      	ldrb	r3, [r3, #4]
 80006e4:	4619      	mov	r1, r3
 80006e6:	2303      	movs	r3, #3
 80006e8:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3
 80006ea:	43db      	mvns	r3, r3
 80006ec:	4619      	mov	r1, r3
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	400a      	ands	r2, r1
 80006f4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	68d9      	ldr	r1, [r3, #12]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	697a      	ldr	r2, [r7, #20]
 8000702:	430a      	orrs	r2, r1
 8000704:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	617b      	str	r3, [r7, #20]

	// 4. Config Output Type
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinOPType
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	7a1b      	ldrb	r3, [r3, #8]
 800070e:	461a      	mov	r2, r3
			<< (pGPIOHandle->pGPIO_Confg.GPIO_pinNumber));
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	791b      	ldrb	r3, [r3, #4]
 8000714:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->pGPIO_Confg.GPIO_pinOPType
 8000718:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	685a      	ldr	r2, [r3, #4]
			<< pGPIOHandle->pGPIO_Confg.GPIO_pinNumber); // Clearing first
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	791b      	ldrb	r3, [r3, #4]
 8000724:	4619      	mov	r1, r3
 8000726:	2301      	movs	r3, #1
 8000728:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 800072a:	43db      	mvns	r3, r3
 800072c:	4619      	mov	r1, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	400a      	ands	r2, r1
 8000734:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	6859      	ldr	r1, [r3, #4]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	697a      	ldr	r2, [r7, #20]
 8000742:	430a      	orrs	r2, r1
 8000744:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000746:	2300      	movs	r3, #0
 8000748:	617b      	str	r3, [r7, #20]

	// 5. Config Alt Functionality
	// Alt:
	// Low: pin 0 -> pin 7
	// High: pin 8 - > pin 15
	if (pGPIOHandle->pGPIO_Confg.GPIO_pinMode == GPIO_MODE_ALT) {
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	795b      	ldrb	r3, [r3, #5]
 800074e:	2b02      	cmp	r3, #2
 8000750:	d135      	bne.n	80007be <GPIO_Init+0x31a>
		uint8_t temp1 = 0, temp2 = 0;
 8000752:	2300      	movs	r3, #0
 8000754:	743b      	strb	r3, [r7, #16]
 8000756:	2300      	movs	r3, #0
 8000758:	73fb      	strb	r3, [r7, #15]
		temp1 = pGPIOHandle->pGPIO_Confg.GPIO_pinNumber / 8;
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	791b      	ldrb	r3, [r3, #4]
 800075e:	08db      	lsrs	r3, r3, #3
 8000760:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->pGPIO_Confg.GPIO_pinNumber % 8;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	791b      	ldrb	r3, [r3, #4]
 8000766:	f003 0307 	and.w	r3, r3, #7
 800076a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // Clearing first
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	7c3a      	ldrb	r2, [r7, #16]
 8000772:	3208      	adds	r2, #8
 8000774:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000778:	7bfb      	ldrb	r3, [r7, #15]
 800077a:	009b      	lsls	r3, r3, #2
 800077c:	220f      	movs	r2, #15
 800077e:	fa02 f303 	lsl.w	r3, r2, r3
 8000782:	43db      	mvns	r3, r3
 8000784:	4618      	mov	r0, r3
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	681b      	ldr	r3, [r3, #0]
 800078a:	7c3a      	ldrb	r2, [r7, #16]
 800078c:	4001      	ands	r1, r0
 800078e:	3208      	adds	r2, #8
 8000790:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	7c3a      	ldrb	r2, [r7, #16]
 800079a:	3208      	adds	r2, #8
 800079c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
				pGPIOHandle->pGPIO_Confg.GPIO_pinAltFunMode << (4 * temp2);
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	7a5b      	ldrb	r3, [r3, #9]
 80007a4:	461a      	mov	r2, r3
 80007a6:	7bfb      	ldrb	r3, [r7, #15]
 80007a8:	009b      	lsls	r3, r3, #2
 80007aa:	fa02 f303 	lsl.w	r3, r2, r3
 80007ae:	4618      	mov	r0, r3
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	7c3a      	ldrb	r2, [r7, #16]
 80007b6:	4301      	orrs	r1, r0
 80007b8:	3208      	adds	r2, #8
 80007ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007be:	bf00      	nop
 80007c0:	371c      	adds	r7, #28
 80007c2:	46bd      	mov	sp, r7
 80007c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c8:	4770      	bx	lr
 80007ca:	bf00      	nop
 80007cc:	40013800 	.word	0x40013800
 80007d0:	40013c00 	.word	0x40013c00

080007d4 <GPIO_ToggleOutputPin>:
void GPIO_WriteOutputPort(GPIO_REG *pGPIOxReg, uint16_t value) {
	pGPIOxReg->ODR = value;
}

// Toggle Output Pin
void GPIO_ToggleOutputPin(GPIO_REG *pGPIOxReg, uint8_t pinNumber) {
 80007d4:	b480      	push	{r7}
 80007d6:	b083      	sub	sp, #12
 80007d8:	af00      	add	r7, sp, #0
 80007da:	6078      	str	r0, [r7, #4]
 80007dc:	460b      	mov	r3, r1
 80007de:	70fb      	strb	r3, [r7, #3]
	pGPIOxReg->ODR ^= (1 << pinNumber);
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	695b      	ldr	r3, [r3, #20]
 80007e4:	78fa      	ldrb	r2, [r7, #3]
 80007e6:	2101      	movs	r1, #1
 80007e8:	fa01 f202 	lsl.w	r2, r1, r2
 80007ec:	405a      	eors	r2, r3
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	615a      	str	r2, [r3, #20]
}
 80007f2:	bf00      	nop
 80007f4:	370c      	adds	r7, #12
 80007f6:	46bd      	mov	sp, r7
 80007f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007fc:	4770      	bx	lr
	...

08000800 <GPIO_IRQConfig>:

// Setup IRQ (ENABLE NVIC) (PROCESSOR SIDE)
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t enOrDis) {
 8000800:	b480      	push	{r7}
 8000802:	b083      	sub	sp, #12
 8000804:	af00      	add	r7, sp, #0
 8000806:	4603      	mov	r3, r0
 8000808:	460a      	mov	r2, r1
 800080a:	71fb      	strb	r3, [r7, #7]
 800080c:	4613      	mov	r3, r2
 800080e:	71bb      	strb	r3, [r7, #6]
	if (enOrDis == ENABLE) {
 8000810:	79bb      	ldrb	r3, [r7, #6]
 8000812:	2b01      	cmp	r3, #1
 8000814:	d133      	bne.n	800087e <GPIO_IRQConfig+0x7e>
		if (IRQNumber <= 31) {
 8000816:	79fb      	ldrb	r3, [r7, #7]
 8000818:	2b1f      	cmp	r3, #31
 800081a:	d80a      	bhi.n	8000832 <GPIO_IRQConfig+0x32>
			//ISER0
			*NVIC_ISER0 |= (1 << IRQNumber);
 800081c:	4b35      	ldr	r3, [pc, #212]	; (80008f4 <GPIO_IRQConfig+0xf4>)
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	79fa      	ldrb	r2, [r7, #7]
 8000822:	2101      	movs	r1, #1
 8000824:	fa01 f202 	lsl.w	r2, r1, r2
 8000828:	4611      	mov	r1, r2
 800082a:	4a32      	ldr	r2, [pc, #200]	; (80008f4 <GPIO_IRQConfig+0xf4>)
 800082c:	430b      	orrs	r3, r1
 800082e:	6013      	str	r3, [r2, #0]
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
		} else if (IRQNumber >= 64 && IRQNumber < 96) {
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 8000830:	e059      	b.n	80008e6 <GPIO_IRQConfig+0xe6>
		} else if (IRQNumber > 31 && IRQNumber < 64) {
 8000832:	79fb      	ldrb	r3, [r7, #7]
 8000834:	2b1f      	cmp	r3, #31
 8000836:	d90f      	bls.n	8000858 <GPIO_IRQConfig+0x58>
 8000838:	79fb      	ldrb	r3, [r7, #7]
 800083a:	2b3f      	cmp	r3, #63	; 0x3f
 800083c:	d80c      	bhi.n	8000858 <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 800083e:	4b2e      	ldr	r3, [pc, #184]	; (80008f8 <GPIO_IRQConfig+0xf8>)
 8000840:	681b      	ldr	r3, [r3, #0]
 8000842:	79fa      	ldrb	r2, [r7, #7]
 8000844:	f002 021f 	and.w	r2, r2, #31
 8000848:	2101      	movs	r1, #1
 800084a:	fa01 f202 	lsl.w	r2, r1, r2
 800084e:	4611      	mov	r1, r2
 8000850:	4a29      	ldr	r2, [pc, #164]	; (80008f8 <GPIO_IRQConfig+0xf8>)
 8000852:	430b      	orrs	r3, r1
 8000854:	6013      	str	r3, [r2, #0]
 8000856:	e046      	b.n	80008e6 <GPIO_IRQConfig+0xe6>
		} else if (IRQNumber >= 64 && IRQNumber < 96) {
 8000858:	79fb      	ldrb	r3, [r7, #7]
 800085a:	2b3f      	cmp	r3, #63	; 0x3f
 800085c:	d943      	bls.n	80008e6 <GPIO_IRQConfig+0xe6>
 800085e:	79fb      	ldrb	r3, [r7, #7]
 8000860:	2b5f      	cmp	r3, #95	; 0x5f
 8000862:	d840      	bhi.n	80008e6 <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000864:	4b25      	ldr	r3, [pc, #148]	; (80008fc <GPIO_IRQConfig+0xfc>)
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	79fa      	ldrb	r2, [r7, #7]
 800086a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800086e:	2101      	movs	r1, #1
 8000870:	fa01 f202 	lsl.w	r2, r1, r2
 8000874:	4611      	mov	r1, r2
 8000876:	4a21      	ldr	r2, [pc, #132]	; (80008fc <GPIO_IRQConfig+0xfc>)
 8000878:	430b      	orrs	r3, r1
 800087a:	6013      	str	r3, [r2, #0]
}
 800087c:	e033      	b.n	80008e6 <GPIO_IRQConfig+0xe6>
		if (IRQNumber <= 31) {
 800087e:	79fb      	ldrb	r3, [r7, #7]
 8000880:	2b1f      	cmp	r3, #31
 8000882:	d80a      	bhi.n	800089a <GPIO_IRQConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000884:	4b1e      	ldr	r3, [pc, #120]	; (8000900 <GPIO_IRQConfig+0x100>)
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	79fa      	ldrb	r2, [r7, #7]
 800088a:	2101      	movs	r1, #1
 800088c:	fa01 f202 	lsl.w	r2, r1, r2
 8000890:	4611      	mov	r1, r2
 8000892:	4a1b      	ldr	r2, [pc, #108]	; (8000900 <GPIO_IRQConfig+0x100>)
 8000894:	430b      	orrs	r3, r1
 8000896:	6013      	str	r3, [r2, #0]
}
 8000898:	e025      	b.n	80008e6 <GPIO_IRQConfig+0xe6>
		} else if (IRQNumber > 31 && IRQNumber < 64) {
 800089a:	79fb      	ldrb	r3, [r7, #7]
 800089c:	2b1f      	cmp	r3, #31
 800089e:	d90f      	bls.n	80008c0 <GPIO_IRQConfig+0xc0>
 80008a0:	79fb      	ldrb	r3, [r7, #7]
 80008a2:	2b3f      	cmp	r3, #63	; 0x3f
 80008a4:	d80c      	bhi.n	80008c0 <GPIO_IRQConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008a6:	4b17      	ldr	r3, [pc, #92]	; (8000904 <GPIO_IRQConfig+0x104>)
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	79fa      	ldrb	r2, [r7, #7]
 80008ac:	f002 021f 	and.w	r2, r2, #31
 80008b0:	2101      	movs	r1, #1
 80008b2:	fa01 f202 	lsl.w	r2, r1, r2
 80008b6:	4611      	mov	r1, r2
 80008b8:	4a12      	ldr	r2, [pc, #72]	; (8000904 <GPIO_IRQConfig+0x104>)
 80008ba:	430b      	orrs	r3, r1
 80008bc:	6013      	str	r3, [r2, #0]
 80008be:	e012      	b.n	80008e6 <GPIO_IRQConfig+0xe6>
		} else if (IRQNumber >= 64 && IRQNumber < 96) {
 80008c0:	79fb      	ldrb	r3, [r7, #7]
 80008c2:	2b3f      	cmp	r3, #63	; 0x3f
 80008c4:	d90f      	bls.n	80008e6 <GPIO_IRQConfig+0xe6>
 80008c6:	79fb      	ldrb	r3, [r7, #7]
 80008c8:	2b5f      	cmp	r3, #95	; 0x5f
 80008ca:	d80c      	bhi.n	80008e6 <GPIO_IRQConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 80008cc:	4b0e      	ldr	r3, [pc, #56]	; (8000908 <GPIO_IRQConfig+0x108>)
 80008ce:	681b      	ldr	r3, [r3, #0]
 80008d0:	79fa      	ldrb	r2, [r7, #7]
 80008d2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008d6:	2101      	movs	r1, #1
 80008d8:	fa01 f202 	lsl.w	r2, r1, r2
 80008dc:	4611      	mov	r1, r2
 80008de:	4a0a      	ldr	r2, [pc, #40]	; (8000908 <GPIO_IRQConfig+0x108>)
 80008e0:	430b      	orrs	r3, r1
 80008e2:	6013      	str	r3, [r2, #0]
}
 80008e4:	e7ff      	b.n	80008e6 <GPIO_IRQConfig+0xe6>
 80008e6:	bf00      	nop
 80008e8:	370c      	adds	r7, #12
 80008ea:	46bd      	mov	sp, r7
 80008ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008f0:	4770      	bx	lr
 80008f2:	bf00      	nop
 80008f4:	e000e100 	.word	0xe000e100
 80008f8:	e000e104 	.word	0xe000e104
 80008fc:	e000e108 	.word	0xe000e108
 8000900:	e000e180 	.word	0xe000e180
 8000904:	e000e184 	.word	0xe000e184
 8000908:	e000e188 	.word	0xe000e188

0800090c <GPIO_IRQPriorty>:

// Config Priorty
void GPIO_IRQPriorty(uint8_t IRQNumber, uint8_t priority) {
 800090c:	b480      	push	{r7}
 800090e:	b085      	sub	sp, #20
 8000910:	af00      	add	r7, sp, #0
 8000912:	4603      	mov	r3, r0
 8000914:	460a      	mov	r2, r1
 8000916:	71fb      	strb	r3, [r7, #7]
 8000918:	4613      	mov	r3, r2
 800091a:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx = IRQNumber / 4;
 800091c:	79fb      	ldrb	r3, [r7, #7]
 800091e:	089b      	lsrs	r3, r3, #2
 8000920:	73fb      	strb	r3, [r7, #15]
	uint8_t iprxSection = IRQNumber % 4;
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	f003 0303 	and.w	r3, r3, #3
 8000928:	73bb      	strb	r3, [r7, #14]
	uint8_t shiftAmount = (8 * iprxSection) + (8 - NO_PR_BITS_IMPLEMENTED);
 800092a:	7bbb      	ldrb	r3, [r7, #14]
 800092c:	00db      	lsls	r3, r3, #3
 800092e:	b2db      	uxtb	r3, r3
 8000930:	3304      	adds	r3, #4
 8000932:	737b      	strb	r3, [r7, #13]
	*( NVIC_PR_BASE_ADDR + iprx) |= (priority << shiftAmount);
 8000934:	7bfb      	ldrb	r3, [r7, #15]
 8000936:	009b      	lsls	r3, r3, #2
 8000938:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800093c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000940:	681a      	ldr	r2, [r3, #0]
 8000942:	79b9      	ldrb	r1, [r7, #6]
 8000944:	7b7b      	ldrb	r3, [r7, #13]
 8000946:	fa01 f303 	lsl.w	r3, r1, r3
 800094a:	4619      	mov	r1, r3
 800094c:	7bfb      	ldrb	r3, [r7, #15]
 800094e:	009b      	lsls	r3, r3, #2
 8000950:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000954:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000958:	430a      	orrs	r2, r1
 800095a:	601a      	str	r2, [r3, #0]
}
 800095c:	bf00      	nop
 800095e:	3714      	adds	r7, #20
 8000960:	46bd      	mov	sp, r7
 8000962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000966:	4770      	bx	lr

08000968 <GPIO_IRQHandling>:

// Handling IRQ
void GPIO_IRQHandling(uint8_t pinNumber) {
 8000968:	b480      	push	{r7}
 800096a:	b083      	sub	sp, #12
 800096c:	af00      	add	r7, sp, #0
 800096e:	4603      	mov	r3, r0
 8000970:	71fb      	strb	r3, [r7, #7]
	if (EXTI->PR & (1 << pinNumber)) {
 8000972:	4b0c      	ldr	r3, [pc, #48]	; (80009a4 <GPIO_IRQHandling+0x3c>)
 8000974:	695b      	ldr	r3, [r3, #20]
 8000976:	79fa      	ldrb	r2, [r7, #7]
 8000978:	2101      	movs	r1, #1
 800097a:	fa01 f202 	lsl.w	r2, r1, r2
 800097e:	4013      	ands	r3, r2
 8000980:	2b00      	cmp	r3, #0
 8000982:	d009      	beq.n	8000998 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << pinNumber);
 8000984:	4b07      	ldr	r3, [pc, #28]	; (80009a4 <GPIO_IRQHandling+0x3c>)
 8000986:	695b      	ldr	r3, [r3, #20]
 8000988:	79fa      	ldrb	r2, [r7, #7]
 800098a:	2101      	movs	r1, #1
 800098c:	fa01 f202 	lsl.w	r2, r1, r2
 8000990:	4611      	mov	r1, r2
 8000992:	4a04      	ldr	r2, [pc, #16]	; (80009a4 <GPIO_IRQHandling+0x3c>)
 8000994:	430b      	orrs	r3, r1
 8000996:	6153      	str	r3, [r2, #20]
	}
}
 8000998:	bf00      	nop
 800099a:	370c      	adds	r7, #12
 800099c:	46bd      	mov	sp, r7
 800099e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009a2:	4770      	bx	lr
 80009a4:	40013c00 	.word	0x40013c00

080009a8 <__libc_init_array>:
 80009a8:	b570      	push	{r4, r5, r6, lr}
 80009aa:	4d0d      	ldr	r5, [pc, #52]	; (80009e0 <__libc_init_array+0x38>)
 80009ac:	4c0d      	ldr	r4, [pc, #52]	; (80009e4 <__libc_init_array+0x3c>)
 80009ae:	1b64      	subs	r4, r4, r5
 80009b0:	10a4      	asrs	r4, r4, #2
 80009b2:	2600      	movs	r6, #0
 80009b4:	42a6      	cmp	r6, r4
 80009b6:	d109      	bne.n	80009cc <__libc_init_array+0x24>
 80009b8:	4d0b      	ldr	r5, [pc, #44]	; (80009e8 <__libc_init_array+0x40>)
 80009ba:	4c0c      	ldr	r4, [pc, #48]	; (80009ec <__libc_init_array+0x44>)
 80009bc:	f000 f818 	bl	80009f0 <_init>
 80009c0:	1b64      	subs	r4, r4, r5
 80009c2:	10a4      	asrs	r4, r4, #2
 80009c4:	2600      	movs	r6, #0
 80009c6:	42a6      	cmp	r6, r4
 80009c8:	d105      	bne.n	80009d6 <__libc_init_array+0x2e>
 80009ca:	bd70      	pop	{r4, r5, r6, pc}
 80009cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80009d0:	4798      	blx	r3
 80009d2:	3601      	adds	r6, #1
 80009d4:	e7ee      	b.n	80009b4 <__libc_init_array+0xc>
 80009d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80009da:	4798      	blx	r3
 80009dc:	3601      	adds	r6, #1
 80009de:	e7f2      	b.n	80009c6 <__libc_init_array+0x1e>
 80009e0:	08000a08 	.word	0x08000a08
 80009e4:	08000a08 	.word	0x08000a08
 80009e8:	08000a08 	.word	0x08000a08
 80009ec:	08000a0c 	.word	0x08000a0c

080009f0 <_init>:
 80009f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009f2:	bf00      	nop
 80009f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009f6:	bc08      	pop	{r3}
 80009f8:	469e      	mov	lr, r3
 80009fa:	4770      	bx	lr

080009fc <_fini>:
 80009fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009fe:	bf00      	nop
 8000a00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a02:	bc08      	pop	{r3}
 8000a04:	469e      	mov	lr, r3
 8000a06:	4770      	bx	lr
